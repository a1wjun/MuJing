name: Build FFmpeg for Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-iconv
            zip
            nasm
            mingw-w64-x86_64-cmake

      - name: Download FFmpeg source code
        run: |
          git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg

      - name: Clone & Build whisper.cpp
        shell: msys2 {0}
        run: |
          set -euo pipefail
          PREFIX="/usr/local"
          git clone https://github.com/ggerganov/whisper.cpp.git
          cd whisper.cpp
          mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
                -DWHISPER_BUILD_TESTS=OFF \
                -DWHISPER_BUILD_EXAMPLES=OFF \
                -DWHISPER_BUILD_SHARED_LIB=OFF \
                -DBUILD_SHARED_LIBS=OFF \
                ..
          cmake --build . --config Release -j $(nproc)
          cmake --install .
          
          # Create pkg-config file
          PC_FILE="${PREFIX}/lib/pkgconfig/whisper.pc"
          mkdir -p "${PREFIX}/lib/pkgconfig"
          cat > "$PC_FILE" << EOF
          prefix=${PREFIX}
          exec_prefix=\${prefix}
          libdir=\${exec_prefix}/lib
          includedir=\${prefix}/include

          Name: whisper
          Description: Port of OpenAI's Whisper model in C/C++
          Version: 1.8.0
          Libs: -L\${libdir} -lwhisper -lggml
          Cflags: -I\${includedir}
          EOF

      - name: Configure FFmpeg
        shell: msys2 {0}
        run: |
          cd ffmpeg
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:${PKG_CONFIG_PATH:-}"
          pkg-config --exists whisper || { echo 'whisper package not found'; exit 1; }
          ./configure --disable-everything \
            --enable-static \
            --disable-shared \
            --disable-ffprobe \
            --enable-ffmpeg \
            --enable-avformat \
            --enable-avcodec \
            --enable-avutil \
            --enable-avfilter \
            --enable-swresample \
            --enable-protocol=file \
            --enable-whisper \
            --enable-filter=whisper \
            --enable-decoder=srt \
            --enable-decoder=movtext \
            --enable-decoder=webvtt \
            --enable-decoder=ass \
            --enable-decoder=ssa \
            --enable-decoder=subrip \
            --enable-encoder=srt \
            --enable-encoder=subrip \
            --enable-encoder=movtext \
            --enable-demuxer=mov \
            --enable-demuxer=matroska \
            --enable-demuxer=ass \
            --enable-demuxer=srt \
            --enable-demuxer=webvtt \
            --enable-demuxer=wav \
            --enable-demuxer=mp3 \
            --enable-demuxer=aac \
            --enable-decoder=pcm_s16le \
            --enable-decoder=mp3 \
            --enable-decoder=aac \
            --enable-muxer=srt \
            --enable-protocol=file \
            --pkg-config-flags="--static" \
            --extra-cflags="-I/usr/local/include" \
            --extra-ldflags="-L/usr/local/lib"

      - name: Build and install FFmpeg
        shell: msys2 {0}
        run: |
          cd ffmpeg
          # 获取 CPU 核心数，fallback 到 4
          CORES=$(nproc 2>/dev/null || echo 4)
          echo "使用 $CORES 个核心进行编译"
          make -j$CORES
          make install

      - name: Test FFmpeg functionality
        shell: msys2 {0}
        run: |
          echo "=== 测试 FFmpeg 基本功能 ==="
          /usr/local/bin/ffmpeg.exe -version
          
          echo "=== 测试支持的编解码器 ==="
          /usr/local/bin/ffmpeg.exe -encoders | grep -E "(srt|subrip|movtext)" || echo "没找到字幕编码器"
          /usr/local/bin/ffmpeg.exe -decoders | grep -E "(srt|movtext|webvtt|ass|ssa)" || echo "没找到字幕解码器"
          
          echo "=== 测试支持的格式 ==="
          /usr/local/bin/ffmpeg.exe -formats | grep -E "(mov|matroska|srt)" || echo "没找到支持的格式"

      - name: Copy dependencies
        shell: msys2 {0}
        run: |
          mkdir -p /usr/local/bin/ffmpeg
          cp /usr/local/bin/ffmpeg.exe /usr/local/bin/ffmpeg/
          cp /mingw64/bin/libbz2-1.dll /usr/local/bin/ffmpeg/
          cp /mingw64/bin/libiconv-2.dll /usr/local/bin/ffmpeg/
          cp /mingw64/bin/liblzma-5.dll /usr/local/bin/ffmpeg/
          cp /mingw64/bin/libwinpthread-1.dll /usr/local/bin/ffmpeg/
          cp /mingw64/bin/zlib1.dll /usr/local/bin/ffmpeg/
      
      

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-windows
          path: D:\a\_temp\msys64\usr\local\bin\ffmpeg